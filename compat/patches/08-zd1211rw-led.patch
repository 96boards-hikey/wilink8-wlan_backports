These changes are present because zd1211rw does not make
use of the mac80211 LED API, which itself uses linux/leds.h.
The backport code includes leds.h so to avoid conflicts
we rename things here.

I've sent this patch upstream, so we can soon remove this.

--- a/drivers/net/wireless/zd1211rw/zd_chip.h	2009-07-06 16:09:14.934197004 -0700
+++ b/drivers/net/wireless/zd1211rw/zd_chip.h	2009-07-06 16:10:01.570226234 -0700
@@ -897,9 +897,9 @@
 int zd_chip_unlock_phy_regs(struct zd_chip *chip);
 
 enum led_status {
-	LED_OFF = 0,
-	LED_SCANNING = 1,
-	LED_ASSOCIATED = 2,
+	ZD_LED_OFF = 0,
+	ZD_LED_SCANNING = 1,
+	ZD_LED_ASSOCIATED = 2,
 };
 
 int zd_chip_control_leds(struct zd_chip *chip, enum led_status status);
--- a/drivers/net/wireless/zd1211rw/zd_chip.c	2009-07-06 16:09:24.986198445 -0700
+++ b/drivers/net/wireless/zd1211rw/zd_chip.c	2009-07-06 16:10:19.898624742 -0700
@@ -1278,11 +1278,11 @@
 	other_led = chip->link_led == LED1 ? LED2 : LED1;
 
 	switch (status) {
-	case LED_OFF:
+	case ZD_LED_OFF:
 		ioreqs[0].value = FW_LINK_OFF;
 		ioreqs[1].value = v[1] & ~(LED1|LED2);
 		break;
-	case LED_SCANNING:
+	case ZD_LED_SCANNING:
 		ioreqs[0].value = FW_LINK_OFF;
 		ioreqs[1].value = v[1] & ~other_led;
 		if (get_seconds() % 3 == 0) {
@@ -1291,7 +1291,7 @@
 			ioreqs[1].value |= chip->link_led;
 		}
 		break;
-	case LED_ASSOCIATED:
+	case ZD_LED_ASSOCIATED:
 		ioreqs[0].value = FW_LINK_TX;
 		ioreqs[1].value = v[1] & ~other_led;
 		ioreqs[1].value |= chip->link_led;
--- a/drivers/net/wireless/zd1211rw/zd_mac.c	2009-07-06 16:09:30.382198435 -0700
+++ b/drivers/net/wireless/zd1211rw/zd_mac.c	2009-07-06 16:11:36.778629948 -0700
@@ -1013,7 +1013,7 @@
 	spin_unlock_irq(&mac->lock);
 
 	r = zd_chip_control_leds(chip,
-		                 is_associated ? LED_ASSOCIATED : LED_SCANNING);
+		                 is_associated ? ZD_LED_ASSOCIATED : ZD_LED_SCANNING);
 	if (r)
 		dev_dbg_f(zd_mac_dev(mac), "zd_chip_control_leds error %d\n", r);
 
@@ -1038,5 +1038,5 @@
 	dev_dbg_f(zd_mac_dev(mac), "\n");
 	cancel_rearming_delayed_workqueue(zd_workqueue,
 		&mac->housekeeping.link_led_work);
-	zd_chip_control_leds(&mac->chip, LED_OFF);
+	zd_chip_control_leds(&mac->chip, ZD_LED_OFF);
 }
