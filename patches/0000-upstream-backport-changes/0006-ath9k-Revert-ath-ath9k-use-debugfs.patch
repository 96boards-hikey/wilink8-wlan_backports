From f1c488a78d9f1a22cdb15648c15e70fd82ed229a Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date: Sat, 6 Dec 2014 07:37:11 -0800
Subject: [PATCH] Revert "ath: ath9k: use debugfs_create_devm_seqfile() helper
 for seq_file entries"

This reverts commit d32394fae95741d733b174ec1446f27765f80233.

It has been reported to cause problems, Jeremiah writes:
	On an Acer C720 laptop if a suspend is performed the screen
	freezes, the machine locks up, and according to the indicator
	lights it does not enter suspend.  A hard reset is required to
	get it running again.

Reported-by: Jeremiah Mahler <jmmahler@gmail.com>
Cc: Arend van Spriel <arend@broadcom.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/net/wireless/ath/ath9k/ahb.c   |   1 -
 drivers/net/wireless/ath/ath9k/debug.c | 122 +++++++++++++++++++++++++++------
 drivers/net/wireless/ath/ath9k/pci.c   |   1 -
 3 files changed, 100 insertions(+), 24 deletions(-)

--- a/drivers/net/wireless/ath/ath9k/ahb.c
+++ b/drivers/net/wireless/ath/ath9k/ahb.c
@@ -126,7 +126,6 @@ static int ath_ahb_probe(struct platform
 	sc = hw->priv;
 	sc->hw = hw;
 	sc->dev = &pdev->dev;
-	dev_set_drvdata(sc->dev, sc);
 	sc->mem = mem;
 	sc->irq = irq;
 
--- a/drivers/net/wireless/ath/ath9k/debug.c
+++ b/drivers/net/wireless/ath/ath9k/debug.c
@@ -403,7 +403,7 @@ static const struct file_operations fops
 
 static int read_file_dma(struct seq_file *file, void *data)
 {
-	struct ath_softc *sc = dev_get_drvdata(file->private);
+	struct ath_softc *sc = file->private;
 	struct ath_hw *ah = sc->sc_ah;
 	u32 val[ATH9K_NUM_DMA_DEBUG_REGS];
 	int i, qcuOffset = 0, dcuOffset = 0;
@@ -470,6 +470,20 @@ static int read_file_dma(struct seq_file
 	return 0;
 }
 
+static int open_file_dma(struct inode *inode, struct file *f)
+{
+	return single_open(f, read_file_dma, inode->i_private);
+}
+
+static const struct file_operations fops_dma = {
+	.open = open_file_dma,
+	.read = seq_read,
+	.owner = THIS_MODULE,
+	.llseek = seq_lseek,
+	.release = single_release,
+};
+
+
 void ath_debug_stat_interrupt(struct ath_softc *sc, enum ath9k_int status)
 {
 	if (status)
@@ -525,7 +539,7 @@ void ath_debug_stat_interrupt(struct ath
 
 static int read_file_interrupt(struct seq_file *file, void *data)
 {
-	struct ath_softc *sc = dev_get_drvdata(file->private);
+	struct ath_softc *sc = file->private;
 
 #define PR_IS(a, s)						\
 	do {							\
@@ -586,9 +600,22 @@ static int read_file_interrupt(struct se
 	return 0;
 }
 
+static int open_file_interrupt(struct inode *inode, struct file *f)
+{
+	return single_open(f, read_file_interrupt, inode->i_private);
+}
+
+static const struct file_operations fops_interrupt = {
+	.read = seq_read,
+	.open = open_file_interrupt,
+	.owner = THIS_MODULE,
+	.llseek = seq_lseek,
+	.release = single_release,
+};
+
 static int read_file_xmit(struct seq_file *file, void *data)
 {
-	struct ath_softc *sc = dev_get_drvdata(file->private);
+	struct ath_softc *sc = file->private;
 
 	seq_printf(file, "%30s %10s%10s%10s\n\n", "BE", "BK", "VI", "VO");
 
@@ -634,7 +661,7 @@ static void print_queue(struct ath_softc
 
 static int read_file_queues(struct seq_file *file, void *data)
 {
-	struct ath_softc *sc = dev_get_drvdata(file->private);
+	struct ath_softc *sc = file->private;
 	struct ath_txq *txq;
 	int i;
 	static const char *qname[4] = {
@@ -655,7 +682,7 @@ static int read_file_queues(struct seq_f
 
 static int read_file_misc(struct seq_file *file, void *data)
 {
-	struct ath_softc *sc = dev_get_drvdata(file->private);
+	struct ath_softc *sc = file->private;
 	struct ath_common *common = ath9k_hw_common(sc->sc_ah);
 	struct ath9k_vif_iter_data iter_data;
 	struct ath_chanctx *ctx;
@@ -746,7 +773,7 @@ static int read_file_misc(struct seq_fil
 
 static int read_file_reset(struct seq_file *file, void *data)
 {
-	struct ath_softc *sc = dev_get_drvdata(file->private);
+	struct ath_softc *sc = file->private;
 	static const char * const reset_cause[__RESET_TYPE_MAX] = {
 		[RESET_TYPE_BB_HANG] = "Baseband Hang",
 		[RESET_TYPE_BB_WATCHDOG] = "Baseband Watchdog",
@@ -810,6 +837,58 @@ void ath_debug_stat_tx(struct ath_softc
 		TX_STAT_INC(qnum, delim_underrun);
 }
 
+static int open_file_xmit(struct inode *inode, struct file *f)
+{
+	return single_open(f, read_file_xmit, inode->i_private);
+}
+
+static const struct file_operations fops_xmit = {
+	.read = seq_read,
+	.open = open_file_xmit,
+	.owner = THIS_MODULE,
+	.llseek = seq_lseek,
+	.release = single_release,
+};
+
+static int open_file_queues(struct inode *inode, struct file *f)
+{
+	return single_open(f, read_file_queues, inode->i_private);
+}
+
+static const struct file_operations fops_queues = {
+	.read = seq_read,
+	.open = open_file_queues,
+	.owner = THIS_MODULE,
+	.llseek = seq_lseek,
+	.release = single_release,
+};
+
+static int open_file_misc(struct inode *inode, struct file *f)
+{
+	return single_open(f, read_file_misc, inode->i_private);
+}
+
+static const struct file_operations fops_misc = {
+	.read = seq_read,
+	.open = open_file_misc,
+	.owner = THIS_MODULE,
+	.llseek = seq_lseek,
+	.release = single_release,
+};
+
+static int open_file_reset(struct inode *inode, struct file *f)
+{
+	return single_open(f, read_file_reset, inode->i_private);
+}
+
+static const struct file_operations fops_reset = {
+	.read = seq_read,
+	.open = open_file_reset,
+	.owner = THIS_MODULE,
+	.llseek = seq_lseek,
+	.release = single_release,
+};
+
 void ath_debug_stat_rx(struct ath_softc *sc, struct ath_rx_status *rs)
 {
 	ath9k_cmn_debug_stat_rx(&sc->debug.stats.rxstats, rs);
@@ -939,7 +1018,7 @@ static const struct file_operations fops
 
 static int read_file_dump_nfcal(struct seq_file *file, void *data)
 {
-	struct ath_softc *sc = dev_get_drvdata(file->private);
+	struct ath_softc *sc = file->private;
 	struct ath_hw *ah = sc->sc_ah;
 	struct ath9k_nfcal_hist *h = sc->cur_chan->caldata.nfCalHist;
 	struct ath_common *common = ath9k_hw_common(ah);
@@ -1181,14 +1260,14 @@ int ath9k_init_debug(struct ath_hw *ah)
 	ath9k_tx99_init_debug(sc);
 	ath9k_cmn_spectral_init_debug(&sc->spec_priv, sc->debug.debugfs_phy);
 
-	debugfs_create_devm_seqfile(sc->dev, "dma", sc->debug.debugfs_phy,
-				    read_file_dma);
-	debugfs_create_devm_seqfile(sc->dev, "interrupt", sc->debug.debugfs_phy,
-				    read_file_interrupt);
-	debugfs_create_devm_seqfile(sc->dev, "xmit", sc->debug.debugfs_phy,
-				    read_file_xmit);
-	debugfs_create_devm_seqfile(sc->dev, "queues", sc->debug.debugfs_phy,
-				    read_file_queues);
+	debugfs_create_file("dma", S_IRUSR, sc->debug.debugfs_phy, sc,
+			    &fops_dma);
+	debugfs_create_file("interrupt", S_IRUSR, sc->debug.debugfs_phy, sc,
+			    &fops_interrupt);
+	debugfs_create_file("xmit", S_IRUSR, sc->debug.debugfs_phy, sc,
+			    &fops_xmit);
+	debugfs_create_file("queues", S_IRUSR, sc->debug.debugfs_phy, sc,
+			    &fops_queues);
 	debugfs_create_u32("qlen_bk", S_IRUSR | S_IWUSR, sc->debug.debugfs_phy,
 			   &sc->tx.txq_max_pending[IEEE80211_AC_BK]);
 	debugfs_create_u32("qlen_be", S_IRUSR | S_IWUSR, sc->debug.debugfs_phy,
@@ -1197,10 +1276,10 @@ int ath9k_init_debug(struct ath_hw *ah)
 			   &sc->tx.txq_max_pending[IEEE80211_AC_VI]);
 	debugfs_create_u32("qlen_vo", S_IRUSR | S_IWUSR, sc->debug.debugfs_phy,
 			   &sc->tx.txq_max_pending[IEEE80211_AC_VO]);
-	debugfs_create_devm_seqfile(sc->dev, "misc", sc->debug.debugfs_phy,
-				    read_file_misc);
-	debugfs_create_devm_seqfile(sc->dev, "reset", sc->debug.debugfs_phy,
-				    read_file_reset);
+	debugfs_create_file("misc", S_IRUSR, sc->debug.debugfs_phy, sc,
+			    &fops_misc);
+	debugfs_create_file("reset", S_IRUSR, sc->debug.debugfs_phy, sc,
+			    &fops_reset);
 
 	ath9k_cmn_debug_recv(sc->debug.debugfs_phy, &sc->debug.stats.rxstats);
 	ath9k_cmn_debug_phy_err(sc->debug.debugfs_phy, &sc->debug.stats.rxstats);
@@ -1222,9 +1301,8 @@ int ath9k_init_debug(struct ath_hw *ah)
 			    &ah->config.cwm_ignore_extcca);
 	debugfs_create_file("regdump", S_IRUSR, sc->debug.debugfs_phy, sc,
 			    &fops_regdump);
-	debugfs_create_devm_seqfile(sc->dev, "dump_nfcal",
-				    sc->debug.debugfs_phy,
-				    read_file_dump_nfcal);
+	debugfs_create_file("dump_nfcal", S_IRUSR, sc->debug.debugfs_phy, sc,
+			    &fops_dump_nfcal);
 
 	ath9k_cmn_debug_base_eeprom(sc->debug.debugfs_phy, sc->sc_ah);
 	ath9k_cmn_debug_modal_eeprom(sc->debug.debugfs_phy, sc->sc_ah);
--- a/drivers/net/wireless/ath/ath9k/pci.c
+++ b/drivers/net/wireless/ath/ath9k/pci.c
@@ -864,7 +864,6 @@ static int ath_pci_probe(struct pci_dev
 	sc = hw->priv;
 	sc->hw = hw;
 	sc->dev = &pdev->dev;
-	dev_set_drvdata(sc->dev, sc);
 	sc->mem = pcim_iomap_table(pdev)[0];
 	sc->driver_data = id->driver_data;
 
