--- a/net/bluetooth/hidp/core.c
+++ b/net/bluetooth/hidp/core.c
@@ -223,6 +223,7 @@ static void hidp_input_report(struct hid
 	input_sync(dev);
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,15,0)
 static int hidp_get_raw_report(struct hid_device *hid,
 		unsigned char report_number,
 		unsigned char *data, size_t count,
@@ -307,6 +308,7 @@ err:
 	mutex_unlock(&session->report_mutex);
 	return ret;
 }
+#endif
 
 static int hidp_set_raw_report(struct hid_device *hid, unsigned char reportnum,
 			       unsigned char *data, size_t count,
@@ -382,6 +384,7 @@ static int hidp_output_report(struct hid
 				      data, count);
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,15,0)
 static int hidp_raw_request(struct hid_device *hid, unsigned char reportnum,
 			    __u8 *buf, size_t len, unsigned char rtype,
 			    int reqtype)
@@ -395,6 +398,7 @@ static int hidp_raw_request(struct hid_d
 		return -EIO;
 	}
 }
+#endif
 
 static void hidp_idle_timeout(unsigned long arg)
 {
@@ -724,8 +728,10 @@ static struct hid_ll_driver hidp_hid_dri
 	.stop = hidp_stop,
 	.open  = hidp_open,
 	.close = hidp_close,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,15,0)
 	.raw_request = hidp_raw_request,
 	.output_report = hidp_output_report,
+#endif
 };
 
 /* This function sets up the hid device. It does not add it
